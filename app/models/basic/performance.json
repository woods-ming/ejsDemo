{
    "题目": "性能优化",
    "摘要": "改进程序，使其运行的更加流畅",
    "关键字": "性能, 优化",
    "正文": {
        "chapters": [
            {
                "name": "一、核心思想",
                "sections": [
                    {
                        "name": "1.预防",
                        "blocks": [
                            {
                                "key": "思想",
                                "description": "培养好的思维习惯和编码规范，让计算机以合理的方式工作"
                            },
                            {
                                "key": "业务设计",
                                "description": "省时省力的把事情做完"
                            },
                            {
                                "key": "",
                                "description": "把计算机当作“不会思考，记忆力、运算力超强”的傻子来看待"
                            },
                            {
                                "key": "",
                                "description": "不能转化为数学问题 || 不适合计算机做的事情，不要交给它做"
                            },
                            {
                                "key": "",
                                "description": "“记忆力、运算力”再强，仍然有限，不能完成超出能力范围的事情"
                            },
                            {
                                "key": "程序设计",
                                "description": "跑得快，好维护"
                            },
                            {
                                "key": "",
                                "description": "综合考虑计算消耗、存储消耗、通信消耗"
                            },
                            {
                                "key": "",
                                "description": "遵守设计原则，将程序设计成可适应已预见的变化"
                            },
                            {
                                "key": "",
                                "description": "平衡资源消耗和可维护性，做出合理的选择"
                            },
                            {
                                "key": "编码实现",
                                "description": "能读懂，易修改"
                            },
                            {
                                "key": "",
                                "description": "遵守代码规范，容易被人读懂"
                            },
                            {
                                "key": "",
                                "description": "消除重复代码，降低维护工作量"
                            },
                            {
                                "key": "",
                                "description": "设定规则，利用静态代码检查工具，提高代码质量"
                            }
                        ]
                    },
                    {
                        "name": "2.定位",
                        "blocks": [
                            {
                                "key": "思想",
                                "description": "根据运行原理，分析可能引发性能问题的地方"
                            },
                            {
                                "key": "客户端",
                                "description": "分析页面加载时间"
                            },
                            {
                                "key": "",
                                "description": "加载Html耗时：生成页面耗时长 || 页面包含冗余内容"
                            },
                            {
                                "key": "",
                                "description": "加载外部资源耗时：资源多且体积大 || 网络环境差 || 服务器响应慢"
                            },
                            {
                                "key": "",
                                "description": "渲染页面耗时：js效率低 || css效率低"
                            },
                            {
                                "key": "",
                                "description": "工具：IE10，Chrome等浏览器自带的分析工具"
                            },
                            {
                                "key": "服务器端",
                                "description": "分析函数执行时间"
                            },
                            {
                                "key": "",
                                "description": "调用第三方组件：使用方式不对 || 第三方组件有问题"
                            },
                            {
                                "key": "",
                                "description": "与其它服务通信：通信链路慢 || 其它程序或服务响应慢"
                            },
                            {
                                "key": "",
                                "description": "自实现的函数：算法速度慢 || 硬件配置不够"
                            },
                            {
                                "key": "",
                                "description": "工具：VS2012自带的性能分析"
                            },
                            {
                                "key": "数据库",
                                "description": "分析sql执行计划"
                            },
                            {
                                "key": "",
                                "description": "单表查询速度慢：数据量大 || 未建立合适的索引"
                            },
                            {
                                "key": "",
                                "description": "多表查询速度慢：关联逻辑效率低 || 筛选逻辑效率低 || sql算法效率低"
                            },
                            {
                                "key": "",
                                "description": "删除和修改速度慢：筛选逻辑效率低"
                            },
                            {
                                "key": "",
                                "description": "写入单条数据速度慢：索引太多 || 表的字段太多 || 包含触发器"
                            },
                            {
                                "key": "",
                                "description": "写入多条数据速度慢：批量写入方式效率低"
                            },
                            {
                                "key": "",
                                "description": "工具：Sql Profiler"
                            }
                        ]
                    },
                    {
                        "name": "3.解决",
                        "blocks": [
                            {
                                "key": "思想",
                                "description": "对症下药"
                            },
                            {
                                "key": "生成页面耗时长",
                                "description": "优化服务端的响应速度 || 增加进度提示"
                            },
                            {
                                "key": "页面包含冗余内容",
                                "description": "考虑精简或用其它方式存储"
                            },
                            {
                                "key": "资源多且体积大",
                                "description": "压缩、合并"
                            },
                            {
                                "key": "网络环境差",
                                "description": "购买带宽 || 使用CDN"
                            },
                            {
                                "key": "服务器响应慢",
                                "description": "提升服务器配置"
                            },
                            {
                                "key": "js效率低",
                                "description": "调试js，改进算法"
                            },
                            {
                                "key": "css效率低",
                                "description": "分析css，进行优化"
                            },
                            {
                                "key": "第三方组件的使用方式不对",
                                "description": "详细了解接口文档，改进调用方式"
                            },
                            {
                                "key": "第三方组件有问题",
                                "description": "更换组件"
                            },
                            {
                                "key": "通信链路慢",
                                "description": "更换通信硬件 || 尝试其它通信方式"
                            },
                            {
                                "key": "其它程序或服务响应慢",
                                "description": "与服务提供方沟通 || 更换服务"
                            },
                            {
                                "key": "算法速度慢",
                                "description": "优化算法（可尝试缓存 || 并行计算）"
                            },
                            {
                                "key": "硬件配置不够",
                                "description": "购买更高的配置"
                            },
                            {
                                "key": "单表数据量大",
                                "description": "分离历史数据"
                            },
                            {
                                "key": "未建立合适的索引",
                                "description": "根据查询特点，合理建立索引"
                            },
                            {
                                "key": "关联逻辑效率低",
                                "description": "调整表的关联次序 || 使用子查询 || 增加冗余字段、减少关联"
                            },
                            {
                                "key": "筛选逻辑效率低",
                                "description": "改进过滤条件"
                            },
                            {
                                "key": "sql算法效率低",
                                "description": "优化sql算法"
                            },
                            {
                                "key": "索引太多",
                                "description": "减少不重要的索引，平衡读写速度"
                            },
                            {
                                "key": "表的字段太多",
                                "description": "将字段拆分到2个表中"
                            },
                            {
                                "key": "包含触发器",
                                "description": "减少触发器的工作量 || 更换为程序方式实现"
                            },
                            {
                                "key": "批量写入方式效率低",
                                "description": "使用SqlBulkCopy等工具提升入库效率"
                            },
                            {
                                "key": "",
                                "description": ""
                            }
                        ]
                    },
                    {
                        "name": "4.常用手段：少干活",
                        "blocks": [
                            {
                                "key": "",
                                "description": "①按需所取"
                            },
                            {
                                "key": "预加载",
                                "description": "多个资源，肯定会用到；合并到一起加载，减少通信次数"
                            },
                            {
                                "key": "懒加载",
                                "description": "一个资源，不一定用到；用时再加载，减少无谓的消耗"
                            },
                            {
                                "key": "分页",
                                "description": "数据量太大，均匀切分；少量加载（懒加载的一种）"
                            },
                            {
                                "key": "",
                                "description": "②复用"
                            },
                            {
                                "key": "缓存计算结果",
                                "description": "计算量很大，并且计算结果有限"
                            },
                            {
                                "key": "缓存加载结果",
                                "description": "加载很频繁，并且资源数量有限"
                            },
                            {
                                "key": "",
                                "description": "③分时操作"
                            },
                            {
                                "key": "冗余字段、单条计算",
                                "description": "计算复杂 || 表的数据量大，并且使用率很高"
                            },
                            {
                                "key": "",
                                "description": "④分工协作"
                            },
                            {
                                "key": "生产者消费者模式",
                                "description": "操作是异步的，可使用队列通信、分开执行"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "二、性能测试",
                "sections": [
                    {
                        "name": "1.基本术语",
                        "blocks": [
                            {
                                "key": "性能",
                                "description": "软件系统对及时性的度量，用一系列指标来度量"
                            },
                            {
                                "key": "性能测试",
                                "description": "模拟用户使用的场景，获取性能指标"
                            },
                            {
                                "key": "并发数量",
                                "description": "同时发送请求的用户数量"
                            },
                            {
                                "key": "响应时间",
                                "description": "（请求 -> 完整应答）的时间"
                            },
                            {
                                "key": "吞吐量",
                                "description": "单位时间内处理的请求数量（体现系统承载能力，相当于举重，最多能举起多大重量）"
                            },
                            {
                                "key": "吞吐率",
                                "description": "单位时间内传输的数据数量（体现网络传输能力，公式：吞吐量/传输时间）"
                            },
                            {
                                "key": "TPS",
                                "description": "Transaction Per Second，系统在1秒钟处理的事务数量"
                            },
                            {
                                "key": "点击率",
                                "description": "单位时间内，用户向服务器提交的请求数量"
                            },
                            {
                                "key": "资源利用率",
                                "description": "CPU、内存、硬盘、网络的使用情况"
                            },
                            {
                                "key": "性能计数器",
                                "description": "观察资源使用情况的工具，通过一些指标来反馈"
                            },
                            {
                                "key": "思考时间",
                                "description": "用户在操作时，每个请求之间的时间间隔"
                            }
                        ]
                    },
                    {
                        "name": "2.测试分类",
                        "blocks": [
                            {
                                "key": "负载测试",
                                "description": "通过改变负载，观察系统的性能指标，找到最大负载。发现系统的缺陷，帮助改进性能"
                            },
                            {
                                "key": "压力测试",
                                "description": "在最大负载的情况下，处理业务的能力。测试系统稳定性"
                            },
                            {
                                "key": "配置测试",
                                "description": "调整系统运行的软/硬件环境，观察性能指标，找到系统的最优配置"
                            },
                            {
                                "key": "并发测试",
                                "description": "模拟用户并发访问，观察某个模块的性能指标"
                            },
                            {
                                "key": "可靠性测试",
                                "description": "在一定负载下，让系统持续运行一段时间，观察性能指标"
                            }
                        ]
                    },
                    {
                        "name": "3.测试目标",
                        "blocks": [
                            {
                                "key": "",
                                "description": "通过负载测试，了解系统能承受的最大负载"
                            },
                            {
                                "key": "",
                                "description": "通过压力测试，了解在最大负载下的抗压能力"
                            },
                            {
                                "key": "",
                                "description": "通过配置测试，了解在指定负载下，什么样的软/硬件配置，性价比最高"
                            },
                            {
                                "key": "",
                                "description": "通过并发测试，了解单个模块的瓶颈"
                            },
                            {
                                "key": "",
                                "description": "通过可靠性测试，了解系统在恶劣环境下是否够皮实"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "注释": [
        "1.良医者，常治无病之病，故无病；圣人者，常治无患之患，故无患",
        "2.性能问题的本质是：计算机做事情的方式不合理",
        "3.工具的作用：呈现程序运行过程中的各项指标，协助分析者判断",
        "4.注重“性价比”，从最大的性能瓶颈开始着手"
    ],
    "参考文献": [
    ]
}