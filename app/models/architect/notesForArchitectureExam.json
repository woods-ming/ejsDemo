{
    "题目": "架构师考试复习笔记",
    "摘要": "阅读参考书后的简单总结，和工作中的个人理解",
    "关键字": "架构师考试,复习笔记",
    "正文": {
        "chapters": [
            {
                "name": "一、操作系统",
                "sections": [
                    {
                        "name": "1.管理cpu",
                        "blocks": [
                            {
                                "key": "进程",
                                "description": "程序的一次运行活动，是资源分配的基本单位"
                            },
                            {
                                "key": "线程",
                                "description": "共用进程的资源，是运行调度的基本单位"
                            },
                            {
                                "key": "进程的3种状态",
                                "description": "阻塞（自己还没准备好）、就绪（自己准备好了）、运行（拉上去工作）"
                            },
                            {
                                "key": "互斥",
                                "description": "资源不能共享，对使用者来说是互斥的"
                            },
                            {
                                "key": "同步",
                                "description": "按顺序做事，第一件做完了，再做第二件"
                            },
                            {
                                "key": "信号量",
                                "description": "标识资源量（还有多少能用）"
                            },
                            {
                                "key": "PV操作",
                                "description": "使用资源的过程中，修改信号量（P减少，V增加）"
                            },
                            {
                                "key": "死锁本质",
                                "description": "互相占有对方的资源，却要求对方先放手"
                            },
                            {
                                "key": "死锁发生的必要条件",
                                "description": "互斥（资源只能独享）、循环等待（等待对方释放资源）、保持与等待（阻塞时不释放资源）、不可抢占（系统不能强行收回资源）"
                            },
                            {
                                "key": "解除死锁",
                                "description": "银行家算法（分配资源前，判断是否会发生死锁）、系统强行回收资源"
                            }
                        ]
                    },
                    {
                        "name": "2.管理文件",
                        "blocks": [
                            {
                                "key": "逻辑结构",
                                "description": "字符流文件（无结构）、记录文件（有结构）"
                            },
                            {
                                "key": "存取方法",
                                "description": "顺序、随机、按键"
                            },
                            {
                                "key": "物理结构",
                                "description": "存储设备通常划分为若干个大小相同的物理块，将其作为分配和传输信息的基本单位"
                            },
                            {
                                "key": "存储方法",
                                "description": "连续文件（按线性表顺序存放，适用于只读文件）、串联文件（按链表方式存储，每个物理块都有指向下一个物理块的指针，适用于顺序访问）、索引文件（在索引表中存储逻辑块与物理块的映射关系，适用于随机存取）"
                            },
                            {
                                "key": "文件访问",
                                "description": "增、删、改、查"
                            },
                            {
                                "key": "树形目录",
                                "description": "绝对路径（从 根目录 走到目标路径）、相对路径（从 当前目录 走到目标路径）"
                            },
                            {
                                "key": "管理空闲物理块",
                                "description": "空闲表法（用线性表记录所有空闲区）、空闲链表法（用链表记录空闲区）、位图法（每个盘块2种状态 1:使用 0:空闲）"
                            }
                        ]
                    },
                    {
                        "name": "3.管理内存",
                        "blocks": [
                            {
                                "key": "虚拟存储技术",
                                "description": "在内存中保留一部分程序或数据，在外存中保存整个地址空间的副本"
                            },
                            {
                                "key": "虚拟内存组织",
                                "description": "分段（按程序大小划分空间）、分页（按固定大小划分空间）、段页式（二者结合）"
                            }
                        ]
                    },
                    {
                        "name": "4.管理设备",
                        "blocks": [
                            {
                                "key": "数据传输控制方式",
                                "description": "程序控制（cpu轮询）、程序中断（cpu接受中断信号）、DMA（专门的内存访问控制器）"
                            },
                            {
                                "key": "SPOOLING技术",
                                "description": "采用一组进程模拟输入输出处理器，内存中开辟输入输出缓冲区，磁盘中开辟输入输出井；cpu直接访问井中的数据，进程负责 【设备<->内存<->井】 的数据交换"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "二、数据库系统",
                "sections": [
                    {
                        "name": "1.简介",
                        "blocks": [
                            {
                                "key": "用途",
                                "description": "存储数据的仓库"
                            },
                            {
                                "key": "定义",
                                "description": "新建一个数据仓库（选址、确定大小、起名字）"
                            },
                            {
                                "key": "建立",
                                "description": "在仓库中创建各种数据库对象（保管员、货架、存货规则）"
                            },
                            {
                                "key": "操作",
                                "description": "操作数据库对象（上货、出货、清点货物）"
                            },
                            {
                                "key": "维护",
                                "description": "优化资源使用，备份、恢复（保持仓库运转流畅，通过合理使用发挥其最大效能）"
                            },
                            {
                                "key": "数据模型",
                                "description": "实体、实体间的关系（货架结构 和 货架间的关系）"
                            }
                        ]
                    },
                    {
                        "name": "2.数据库模式（其实就是分层）",
                        "blocks": [
                            {
                                "key": "外模式",
                                "description": "从用户的视角看数据逻辑（业务实体）"
                            },
                            {
                                "key": "概念模式",
                                "description": "从程序员/dba的视角看存储逻辑（表、视图）"
                            },
                            {
                                "key": "内模式",
                                "description": "物理存储方式（文件）"
                            }
                        ]
                    },
                    {
                        "name": "3.数据库范式",
                        "blocks": [
                            {
                                "key": "1NF",
                                "description": "原子性（属性不可再分）"
                            },
                            {
                                "key": "2NF",
                                "description": "唯一性（所有属性都依赖于主键，由主键代表该条记录）"
                            },
                            {
                                "key": "3NF",
                                "description": "无冗余（不能依赖于非主键的属性）"
                            }
                        ]
                    },
                    {
                        "name": "4.数据库设计",
                        "blocks": [
                            {
                                "key": "规划",
                                "description": "数据库的地位（承担哪些职责）"
                            },
                            {
                                "key": "需求",
                                "description": "解决哪些问题"
                            },
                            {
                                "key": "概念设计",
                                "description": "业务概念 -> E-R图"
                            },
                            {
                                "key": "逻辑设计",
                                "description": "设计范式 + DBMS特性 -> DDL（表、视图、存储过程）"
                            },
                            {
                                "key": "物理设计",
                                "description": "硬件 + OS -> 存储格式、存放位置"
                            }
                        ]
                    },
                    {
                        "name": "5.事务的ACID特性",
                        "blocks": [
                            {
                                "key": "A原子性",
                                "description": "一不做，二不休"
                            },
                            {
                                "key": "C一致性",
                                "description": "事务执行前后，所有数据保持一致的状态"
                            },
                            {
                                "key": "I隔离性",
                                "description": "事务的执行，不会相互干扰"
                            },
                            {
                                "key": "D持续性",
                                "description": "对数据的修改是持久的"
                            }
                        ]
                    },
                    {
                        "name": "6.并发问题",
                        "blocks": [
                            {
                                "key": "丢失更新",
                                "description": "事务1修改的数据，被事务2修改，事务1还没结束（写完数据被干扰）"
                            },
                            {
                                "key": "不可重复读",
                                "description": "事务1读到数据后，被事务2修改，事务1再读（读完数据被干扰）"
                            },
                            {
                                "key": "读脏数据",
                                "description": "事务1读到被事务2修改的数据，然后事务2撤销（读数据之前被干扰）"
                            },
                            {
                                "key": "X锁",
                                "description": "独占 “读/写”操作（隔离不稳定状态）"
                            },
                            {
                                "key": "S锁",
                                "description": "共享 “读”操作（稳定数据状态）"
                            }
                        ]
                    },
                    {
                        "name": "7.解决死锁（锁在解决并发时，引入的另一个问题）",
                        "blocks": [
                            {
                                "key": "事前",
                                "description": "资源编号，顺序申请（避免互相占有对方的资源）"
                            },
                            {
                                "key": "事后",
                                "description": "检测到死锁，强制解除"
                            }
                        ]
                    },
                    {
                        "name": "8.备份与恢复",
                        "blocks": [
                            {
                                "key": "备份",
                                "description": "冷备（不活动了再复制，可靠）、热备（活动时复制，不可靠）、全备（完整复制）、增量（从上次的备份点到现在）"
                            },
                            {
                                "key": "还原",
                                "description": "根据备份点，重建数据库；根据日志文件，撤销错误操作，重做正确操作；"
                            }
                        ]
                    },
                    {
                        "name": "9.数据库安全",
                        "blocks": [
                            {
                                "key": "身份认证",
                                "description": "账号/密码 （或证书等）"
                            },
                            {
                                "key": "角色授权",
                                "description": "登录权限（允许进入系统）、资源管理权限（允许管理别人的资源、创建自己的资源）、dba权限（完全控制：为所欲为）"
                            },
                            {
                                "key": "数据授权",
                                "description": "隔离原则（只能访问指定的对象：表、存储过程、视图）、控制原则（只能按指定方式操作数据：增、删、改、查、执行）"
                            },
                            {
                                "key": "审计",
                                "description": "记录用户访问日志，用于稽查用户行为"
                            }
                        ]
                    },
                    {
                        "name": "10.数据仓库",
                        "blocks": [
                            {
                                "key": "定义",
                                "description": "面向主题（由业务聚合数据）、集成的（对分散数据的加工、汇总和整理）、数据稳定（数据将被长期保留，修改和删除很少）、随时间变化（积累数据）"
                            },
                            {
                                "key": "与数据库的区别",
                                "description": "只存放历史数据，目的是通过分析、提供决策支持"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "三、计算机网络",
                "sections": [
                    {
                        "name": "1.分类（按距离）",
                        "blocks": [
                            {
                                "key": "局域网",
                                "description": "距离近，速度块。几乎都是由以太网 实现"
                            },
                            {
                                "key": "广域网",
                                "description": "由通信子网和资源子网组成"
                            },
                            {
                                "key": "城域网",
                                "description": "由DQDB分布式队列双总线 实现"
                            }
                        ]
                    },
                    {
                        "name": "2.OSI开发互联模型（本质：职责的划分）",
                        "blocks": [
                            {
                                "key": "物理层",
                                "description": "硬件联通"
                            },
                            {
                                "key": "数据链路层",
                                "description": "相邻节点的数据传递"
                            },
                            {
                                "key": "网络层",
                                "description": "任意节点的数据传递"
                            },
                            {
                                "key": "传输层",
                                "description": "信息正确传递（完整、无错）"
                            },
                            {
                                "key": "会话层",
                                "description": "节点相互识别，并建立通信"
                            },
                            {
                                "key": "表示层",
                                "description": "<信息-数据> 的互译"
                            },
                            {
                                "key": "应用层",
                                "description": "使用信息交互，提供应用服务"
                            }
                        ]
                    },
                    {
                        "name": "3.网络地址（计算机在网络中的身份证）",
                        "blocks": [
                            {
                                "key": "ip地址",
                                "description": "在某个网络中的唯一标识"
                            },
                            {
                                "key": "子网掩码",
                                "description": "配合ip获取子网地址，并可计算子网的容量"
                            },
                            {
                                "key": "socket",
                                "description": "ip + port，也就是应用程序的通信地址"
                            }
                        ]
                    },
                    {
                        "name": "4.网络设备",
                        "blocks": [
                            {
                                "key": "集线器（物理层）",
                                "description": "把节点集中到总线上"
                            },
                            {
                                "key": "重发器（物理层）",
                                "description": "信号放大"
                            },
                            {
                                "key": "调制解调器（物理层）",
                                "description": "数字信号/模拟信号 转换"
                            },
                            {
                                "key": "网卡（数据链路层）",
                                "description": "负责主机收发数据"
                            },
                            {
                                "key": "网桥（数据链路层）",
                                "description": "连接局域网"
                            },
                            {
                                "key": "二层交换机（数据链路层）",
                                "description": "多端口网桥，进行局域网互联"
                            },
                            {
                                "key": "三层交换机（传输层）",
                                "description": "带路由功能的二层交互机"
                            },
                            {
                                "key": "路由器（网络层）",
                                "description": "根据ip地址，寻找网络设备"
                            },
                            {
                                "key": "网关（网络层）",
                                "description": "连接2个不兼容的系统"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "四、多媒体基础",
                "sections": [
                    {
                        "name": "1.简介",
                        "blocks": [
                            {
                                "key": "定义",
                                "description": "传播信息的媒介"
                            },
                            {
                                "key": "感知",
                                "description": "文字、图片、声音、视频"
                            },
                            {
                                "key": "表示",
                                "description": "将信息编码，变成数据形式"
                            },
                            {
                                "key": "呈现",
                                "description": "用设备将编码还原成 可感知的形式"
                            }
                        ]
                    },
                    {
                        "name": "2.声音",
                        "blocks": [
                            {
                                "key": "音强",
                                "description": "声音大小"
                            },
                            {
                                "key": "音调",
                                "description": "声音高低"
                            },
                            {
                                "key": "音色",
                                "description": "（固定频率）基音+（不同音强）泛音"
                            }
                        ]
                    },
                    {
                        "name": "3.颜色",
                        "blocks": [
                            {
                                "key": "亮度",
                                "description": "光的强度（表现为明暗程度）"
                            },
                            {
                                "key": "色调",
                                "description": "光的频谱（表现为不同颜色）"
                            },
                            {
                                "key": "饱和度",
                                "description": "掺入白光的程度（表现为颜色深浅）"
                            },
                            {
                                "key": "颜色互补",
                                "description": "黄+蓝=白，红+青=白，红+绿+蓝=白"
                            }
                        ]
                    },
                    {
                        "name": "4.图像、图形、视频",
                        "blocks": [
                            {
                                "key": "图形",
                                "description": "由点和线组成（又叫 矢量图）"
                            },
                            {
                                "key": "图像",
                                "description": "由像素组成"
                            },
                            {
                                "key": "视频",
                                "description": "连续渐变的静态图像"
                            },
                            {
                                "key": "流媒体传输",
                                "description": "顺序流（只能观看已经下载的部分）、实时流（可以通过快进、后退来随机播放）"
                            }
                        ]
                    },
                    {
                        "name": "5.数据压缩的衡量标准（从付出、收获2个角度看）",
                        "blocks": [
                            {
                                "key": "压缩效果",
                                "description": "通过 数据质量 体现"
                            },
                            {
                                "key": "压缩能力",
                                "description": "通过 数据量 体现"
                            },
                            {
                                "key": "付出代价",
                                "description": "通过 计算复杂度 体现"
                            }
                        ]
                    },
                    {
                        "name": "6.数据压缩的原理（去除冗余）",
                        "blocks": [
                            {
                                "key": "信息冗余",
                                "description": "空间冗余（图片中的相邻像素）、时间冗余（动画中的相邻图像）、知觉冗余（人看不到的红外线、紫外线，听不到的海豚音）、知识冗余（人脸的图像不会偏离 先验知识）"
                            },
                            {
                                "key": "无损压缩",
                                "description": "只去除部分冗余，压缩比低（可逆）"
                            },
                            {
                                "key": "有损压缩",
                                "description": "会减少部分信息，压缩比高（不可逆）"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "五、系统性能评价",
                "sections": [
                    {
                        "name": "1.性能计算",
                        "blocks": [
                            {
                                "key": "响应时间（敏捷）",
                                "description": "发出请求，到得到响应的 时间间隔"
                            },
                            {
                                "key": "吞吐量（力量）",
                                "description": "一次能够接受的任务数量，完成的任务数量"
                            }
                        ]
                    },
                    {
                        "name": "2.性能设计（关注：时间、空间、资源占用）",
                        "blocks": [
                            {
                                "key": "1）识别约束",
                                "description": "不能通过牺牲某项特性来提高性能（“不能拆的东墙”）"
                            },
                            {
                                "key": "2）指定负载",
                                "description": "某个页面、或某项服务、某个sql"
                            },
                            {
                                "key": "3）设定目标",
                                "description": "量化 响应时间、吞吐量"
                            },
                            {
                                "key": "4）调整循环",
                                "description": "收集指标 -> 分析瓶颈 -> 更改配置 -> 测试效果"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "六、软件开发过程（介绍开发过程中必不可少的活动）",
                "sections": [
                    {
                        "name": "1.软件开发生命周期（从构思开始，经过开发维护，直到废弃的全过程）",
                        "blocks": [
                            {
                                "key": "软件定义阶段（确定系统目标）",
                                "description": "定义业务问题，探讨（技术、经济、操作）可行的解决方案，并确定软件做什么（软件需求）、做好了如何验证（测试大纲）、用户如何与系统配合（用户手册）"
                            },
                            {
                                "key": "软件实现阶段（建造系统）",
                                "description": "设计：实现思路（概要：规划功能模块、详细：细化功能细节）、测试思路（集成：验证功能模块、单元：验证功能细节）；编码：用编程语言描述实现思路；测试：执行测试用例，反馈问题；"
                            },
                            {
                                "key": "软件运行维护阶段（使用系统）",
                                "description": "通过监控和管理运行环境，保证系统的可用性和稳定性；通过软件改进、需求响应，延长软件的生命；"
                            }
                        ]
                    },
                    {
                        "name": "2.定义业务问题",
                        "blocks": [
                            {
                                "key": "在问题定义上达成共识",
                                "description": "描述出来，当面沟通"
                            },
                            {
                                "key": "探讨问题本质",
                                "description": "使用鱼骨图和帕雷托图，尽量抛开主观因素"
                            },
                            {
                                "key": "确定项目干系人",
                                "description": "明确了利益相关的各方，在出解决方案时就能平衡大家的利益"
                            },
                            {
                                "key": "定义系统边界",
                                "description": "系统要做什么，不做什么，必须一清二楚"
                            },
                            {
                                "key": "确定系统实现约束",
                                "description": "现有的资源（人、财、物、时间），对系统的期望（性能、可靠性、安全性、可伸缩性、可维护性）"
                            }
                        ]
                    },
                    {
                        "name": "3.可行性分析",
                        "blocks": [
                            {
                                "key": "技术",
                                "description": "能不能做出来"
                            },
                            {
                                "key": "经济",
                                "description": "付出与回报相比，划不划算"
                            },
                            {
                                "key": "操作",
                                "description": "系统对社会的影响是否与法律冲突，人们愿不愿意花心思来研究使用系统"
                            }
                        ]
                    },
                    {
                        "name": "4.需求工程",
                        "blocks": [
                            {
                                "key": "",
                                "description": "①需求开发"
                            },
                            {
                                "key": "需求获取",
                                "description": "从什么地方（项目干系人、背景资料、现有产品），用什么方式（用户访谈、现场观摩），搜集什么信息（业务流程、用户期望）"
                            },
                            {
                                "key": "需求分析",
                                "description": "确定业务流程、场景、利益相关人"
                            },
                            {
                                "key": "需求定义",
                                "description": "编写需求说明书"
                            },
                            {
                                "key": "需求验证",
                                "description": "跟用户确认"
                            },
                            {
                                "key": "",
                                "description": "②需求管理"
                            },
                            {
                                "key": "变更控制",
                                "description": "挑选合适的人、对需求变更做评审，变更结束后通知相关人员（同时做出设计变更、计划变更）"
                            },
                            {
                                "key": "需求跟踪",
                                "description": "某项需求->设计->源代码->测试->帮助（可以明确需求变更的影响范围、说明每个产品部件存在的原因）"
                            },
                            {
                                "key": "版本控制",
                                "description": "记录变更历史、变更原因，做到有迹可循、有因可查（解决人的记性差、多人协作易冲突的问题）"
                            },
                            {
                                "key": "需求状态跟踪",
                                "description": "定义状态，通过状态变化了解需求的跟进处理情况（待评估、忽略、已变更、设计同步变更、代码同步变更、通过验证、已上线）"
                            }
                        ]
                    },
                    {
                        "name": "5.软件设计（文档级的软件设计）",
                        "blocks": [
                            {
                                "key": "4个活动",
                                "description": "数据设计（不同于数据库设计，贴切的说是业务实体）、架构设计、交互设计、流程设计（实现业务功能）"
                            },
                            {
                                "key": "结构化设计方法",
                                "description": "从过程的角度思考，自顶向下，逐步细化；仅使用“顺序、分支、循环”三种结构"
                            },
                            {
                                "key": "面向对象设计方法",
                                "description": "从对象协作的角度思考，用uml描述领域驱动模型"
                            }
                        ]
                    },
                    {
                        "name": "6.软件开发（代码级的软件设计）",
                        "blocks": [
                            {
                                "key": "运用设计模式",
                                "description": "以能复用、易修改（封装变化点）为目的，以面向对象5大原则为基础，设计类"
                            },
                            {
                                "key": "运用算法",
                                "description": "函数的精髓就是算法"
                            }
                        ]
                    },
                    {
                        "name": "7.软件测试",
                        "blocks": [
                            {
                                "key": "测试类型",
                                "description": "黑盒测试（等价类、边界值、依靠经验直觉的错误推测）、白盒测试（按实现逻辑来测）"
                            },
                            {
                                "key": "测试阶段",
                                "description": "单元测试（开发人员验证程序逻辑单元）、集成测试（测试人员验证业务功能）、确认测试（验证软件需求说明书中的所有功能需求、非功能性需求）、系统测试（在生产环境下，连同硬件设备和网络，一起测试）"
                            },
                            {
                                "key": "负载测试",
                                "description": "检验软件的抗压能力（某个功能允许多少人同时使用）"
                            },
                            {
                                "key": "测试管理",
                                "description": "制定测试计划，跟踪bug状态"
                            }
                        ]
                    },
                    {
                        "name": "8.软件维护",
                        "blocks": [
                            {
                                "key": "改正性维护",
                                "description": "bug修复"
                            },
                            {
                                "key": "适应性维护",
                                "description": "由于软硬件环境发生变化，需要跟环境匹配"
                            },
                            {
                                "key": "完善性维护",
                                "description": "新需求（功能性/非功能性的）"
                            }
                        ]
                    },
                    {
                        "name": "9.开发活动中的工具支持",
                        "blocks": [
                            {
                                "key": "项目管理",
                                "description": "Project ..."
                            },
                            {
                                "key": "业务建模",
                                "description": "Rose ..."
                            },
                            {
                                "key": "编码",
                                "description": "Visual Studio ..."
                            },
                            {
                                "key": "测试管理",
                                "description": "Bugfree ..."
                            },
                            {
                                "key": "性能测试",
                                "description": "LoadRunner ..."
                            },
                            {
                                "key": "持续集成",
                                "description": "CruiseControl ..."
                            },
                            {
                                "key": "版本管理",
                                "description": "SVN ..."
                            }
                        ]
                    }
                ]
            },
            {
                "name": "七、软件开发方法（如何组织各个活动）",
                "sections": [
                    
                    {
                        "name": "1.传统开发方法（以过程为主）",
                        "blocks": [
                            {
                                "key": "瀑布模型",
                                "description": "按固定次序来（“需求、设计、编码和测试、运维”：步步为营）"
                            },
                            {
                                "key": "原型模型",
                                "description": "先简单做个粗略的样子，经确认后再正式做（降低风险）"
                            },
                            {
                                "key": "螺旋模型",
                                "description": "按固定次序来，但每个活动分成4个步骤：制定计划、风险分析、实施工程、客户评估（既步步为营，又降低风险，但成本太高）"
                            },
                            {
                                "key": "增量迭代模型",
                                "description": "将需求拆分成多个部分，逐个实现；每次实现的过程是一个迭代（能尽早看到产品）"
                            },
                            {
                                "key": "构件组装模型",
                                "description": "软件实现阶段，专注于架构设计和构件库的建立，以复用已有构件和开发以后可复用的构件为主（节省工作量）"
                            }
                        ]
                    },
                    {
                        "name": "2.敏捷方法（以人为主）",
                        "blocks": [
                            {
                                "key": "核心思想",
                                "description": "适应变化（而非遵照计划：因为设计很难一步到位）、人为主体（而非固定的过程：因为技术和需求变化快）、增量迭代（多轮次开发，每次关注不同的功能）"
                            },
                            {
                                "key": "核心价值观",
                                "description": "沟通（及时发表自己的想法）、简单（满足当前需求，不做过度设计）、反馈（审视代码和设计，给出参考意见）、勇气（变化巨大，需要取舍和重构时，用于抉择）"
                            },
                            {
                                "key": "与传统开发方法的区别",
                                "description": "用面对面沟通代替文档沟通，用随机应变代替按部就班，用循序渐进代替一步到位"
                            }
                        ]
                    },
                    {
                        "name": "3.统一过程（Rational公司创建的所谓通用的过程框架）",
                        "blocks": [
                            {
                                "key": "RUP特点",
                                "description": "用例驱动（以实现用户操作为目标）、以体系结构为中心（构成系统的元素和元素之间的交互）、增量迭代"
                            },
                            {
                                "key": "迭代周期",
                                "description": "初始（确定项目边界）、细化（设计体系结构）、构造（开发系统）、移交（给用户使用）"
                            },
                            {
                                "key": "9个核心工作流",
                                "description": "业务建模、需求、分析与设计、实现、测试、部署、配置与变更惯例、项目管理、环境（开发运行环境、过程管理工具）"
                            },
                            {
                                "key": "核心概念",
                                "description": "角色（如：架构师、程序员、测试员等）、活动、制品（文档、代码）、工作流（按次序开展活动）"
                            },
                            {
                                "key": "RUP裁剪",
                                "description": "RUP是一个开发指南，拥有很多过程模板；实际开发中根据项目的特点，在不同的生命周期选择合适的工作流、角色、制品"
                            },
                            {
                                "key": "“4+1”视图",
                                "description": "用例视图（系统行为）、逻辑视图（系统功能）、实现视图（系统装配）、进程视图（系统性能）、部署视图（发布安装）"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "八、软件架构设计",
                "sections": [
                    {
                        "name": "1.什么是软件架构",
                        "blocks": [
                            {
                                "key": "架构",
                                "description": "构件+连接子，就是系统的核心部分"
                            },
                            {
                                "key": "通俗理解",
                                "description": "架构就是架子+构件，构件是相对独立的部件，放在架子上，就组织出了一个系统"
                            }
                        ]
                    },
                    {
                        "name": "2.基于架构的软件开发方法",
                        "blocks": [
                            {
                                "key": "三个基础",
                                "description": "功能分解（自顶向下、逐步细化）、选择合适的架构风格、使用软件模板"
                            },
                            {
                                "key": "开发过程",
                                "description": "获取架构需求、设计架构、架构文档化、评审架构、实现架构、架构演化"
                            },
                            {
                                "key": "获取架构需求",
                                "description": "分析业务功能、非功能性需求（质量属性）；标识构件（分析出类，并分组）；评审需求和构件"
                            },
                            {
                                "key": "设计架构",
                                "description": "选择架构风格、把构件放到此架构中、分析构件之间的关系、评审"
                            },
                            {
                                "key": "实现架构",
                                "description": "细化设计；实现构件和连接子；组装、测试"
                            },
                            {
                                "key": "架构演化",
                                "description": "将需求变化归类，并与构件相对应；制定演化计划；修改构件和连接子；组装、测试"
                            }
                        ]
                    },
                    {
                        "name": "3.架构风格（构件和连接子的组织方式）",
                        "blocks": [
                            {
                                "key": "管道和过滤器",
                                "description": "每个构件都有输入和输出（像过滤器），构件相互连接（像管道）"
                            },
                            {
                                "key": "面向对象",
                                "description": "将数据和操作封装到对象中，作为构件"
                            },
                            {
                                "key": "事件驱动",
                                "description": "在事件中调用[变量.方法]，变量就是注册事件的对象；宏观上的感觉就是事件发生后，自动通知了注册的对象、并触发了相应行为（依赖于多态）"
                            },
                            {
                                "key": "分层系统",
                                "description": "每一层能够调用下层，并给上层提供服务"
                            },
                            {
                                "key": "仓库系统",
                                "description": "中央数据结构组织所有类，独立构件在各数据类上执行"
                            },
                            {
                                "key": "c/s",
                                "description": "应用+界面在client，数据库在server"
                            },
                            {
                                "key": "b/s",
                                "description": "界面在browser，应用和数据在server"
                            },
                            {
                                "key": "SOA",
                                "description": ""
                            },
                            {
                                "key": "AOP",
                                "description": ""
                            }
                        ]
                    },
                    {
                        "name": "4.架构评估",
                        "blocks": [
                            {
                                "key": "关注非功能特性",
                                "description": "性能（响应时间/单位时间处理数）、可靠性（错误处理、异常处理）、安全性（阻止非授权用户的使用企图、防止信息被非法修改）、可维护性（容易扩展、修改、移植）"
                            },
                            {
                                "key": "敏感点",
                                "description": "影响构件的质量（某项非功能需求）"
                            },
                            {
                                "key": "权衡点",
                                "description": "同时影响构件的多个质量特性（比如加密级别会对安全性和性能产生影响，需要平衡）"
                            },
                            {
                                "key": "利益相关人（风险承担人）",
                                "description": "对系统有期望、且会施加影响的各个角色"
                            },
                            {
                                "key": "场景",
                                "description": "通过输入、环境、输出（就是信号与系统嘛）描述质量优劣"
                            },
                            {
                                "key": "SAAM评估方法",
                                "description": "设想业务场景,检验是否满足非功能性需求"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "九、UML建模",
                "sections": [
                    {
                        "name": "1.什么是UML（统一建模语言）",
                        "blocks": [
                            {
                                "key": "概念",
                                "description": "用简单的图形和符号，表达软件设计中的静态结构和动态过程"
                            },
                            {
                                "key": "背景",
                                "description": "一个图形化语言，为了描述面向对象软件开发的模型"
                            }
                        ]
                    },
                    {
                        "name": "2.事物",
                        "blocks": [
                            {
                                "key": "用例",
                                "description": "用户需要的功能"
                            },
                            {
                                "key": "协作",
                                "description": "一组由多个角色参与的交互操作"
                            },
                            {
                                "key": "活动",
                                "description": "一组有目标的动作总和"
                            },
                            {
                                "key": "构件",
                                "description": "系统中，可替换的组成部分"
                            },
                            {
                                "key": "节点",
                                "description": "一个计算资源"
                            },
                            {
                                "key": "类",
                                "description": "对一类事物的抽象"
                            },
                            {
                                "key": "接口",
                                "description": "对一组行为的抽象"
                            }
                        ]
                    },
                    {
                        "name": "3.关系",
                        "blocks": [
                            {
                                "key": "依赖",
                                "description": "A变化，会引起B变化"
                            },
                            {
                                "key": "关联",
                                "description": "1对1，1对多，多对多"
                            },
                            {
                                "key": "继承",
                                "description": "A有的B都有，B还有更特殊的部分"
                            },
                            {
                                "key": "实现",
                                "description": "A是契约，B是具体实现"
                            }
                        ]
                    },
                    {
                        "name": "4.图（事物和关系的集合）",
                        "blocks": [
                            {
                                "key": "",
                                "description": "描述静态结构"
                            },
                            {
                                "key": "用例图",
                                "description": "描述用户和行为之间的关系，即业务场景"
                            },
                            {
                                "key": "类图",
                                "description": "描述类的属性、方法，及类之间的关系（实现、继承、关联、依赖）"
                            },
                            {
                                "key": "对象图",
                                "description": "描述某一时间段 活跃的对象，及对象间的关系"
                            },
                            {
                                "key": "包图",
                                "description": "描述包中的类，及包之间的关系"
                            },
                            {
                                "key": "构件图",
                                "description": "描述构件，及构件之间的关系"
                            },
                            {
                                "key": "部署图",
                                "description": "描述计算节点的拓扑结构，及节点上运行的软件构件"
                            },
                            {
                                "key": "",
                                "description": "描述动态过程"
                            },
                            {
                                "key": "序列图",
                                "description": "描述对象协作中的 消息序列"
                            },
                            {
                                "key": "协作图",
                                "description": "描述对象之间的 协作关系"
                            },
                            {
                                "key": "状态图",
                                "description": "描述对象的 状态迁移，及每个状态下 能够响应的事件"
                            },
                            {
                                "key": "活动图",
                                "description": "描述活动之间的 先后次序"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "十、设计模式",
                "sections": [
                    {
                        "name": "1.为什么用设计模式",
                        "blocks": [
                            {
                                "key": "根本目标",
                                "description": "用特定解决方案 处理 重复发生的问题"
                            },
                            {
                                "key": "好处",
                                "description": "①快速复用 ②方便沟通 ③封装变化点"
                            }
                        ]
                    },
                    {
                        "name": "2.基本组成元素",
                        "blocks": [
                            {
                                "key": "模式名",
                                "description": "见名知意（对一套方法的精炼表达，目的是方便沟通）"
                            },
                            {
                                "key": "问题",
                                "description": "在特定背景下，期望达到的目标"
                            },
                            {
                                "key": "解决方案",
                                "description": "描述具体怎么做（用uml/文字/流程图 表达）"
                            },
                            {
                                "key": "效果",
                                "description": "分析付出的代价和得到的回报"
                            }
                        ]
                    },
                    {
                        "name": "3.设计模式分类",
                        "blocks": [
                            {
                                "key": "创建型",
                                "description": "如何创建对象"
                            },
                            {
                                "key": "结构型",
                                "description": "如何构造 类/对象"
                            },
                            {
                                "key": "行为型",
                                "description": "如何在多个对象间，分配职责"
                            }
                        ]
                    },
                    {
                        "name": "4.创建型模式（关于繁殖的故事）",
                        "blocks": [
                            {
                                "key": "Singleton",
                                "description": "只能创建一个实例"
                            },
                            {
                                "key": "Prototype",
                                "description": "由已知对象，复制出另外一个实例"
                            },
                            {
                                "key": "Factory Method",
                                "description": "预先定义生产一个对象的工厂接口：以后由若干具体的工厂，去创建不同的对象"
                            },
                            {
                                "key": "Abstract Factory",
                                "description": "预先定义生产一系列相关对象的工厂接口：以后由若干具体的工厂，去创建不同的对象族"
                            },
                            {
                                "key": "Builder",
                                "description": "由若干已知对象，组合出新的实例"
                            }
                        ]
                    },
                    {
                        "name": "5.结构型模式（关于皮和瓤的故事）",
                        "blocks": [
                            {
                                "key": "Adapter",
                                "description": "转换类的接口"
                            },
                            {
                                "key": "Bridge",
                                "description": "稳定类的接口，将实现独立出来"
                            },
                            {
                                "key": "Composite",
                                "description": "用若干基本对象，组合出一个集合对象，并使它们看起来相同"
                            },
                            {
                                "key": "Decorator",
                                "description": "为已知类创建一个壳，里面必须装该类的对象；壳不改变接口，但在实现时增强了对象的行为"
                            },
                            {
                                "key": "Facade",
                                "description": "整理已有的若干对象，选出这次需要的，构造出一个更容易访问的简化对象（隐藏复杂性）"
                            },
                            {
                                "key": "Proxy",
                                "description": "为已有对象创建一个经纪人，代替它抛头露面（保护细节）"
                            },
                            {
                                "key": "Flyweight",
                                "description": "若干对象的某部分内容均相同，在存储时剔除重复、共享一份"
                            }
                        ]
                    },
                    {
                        "name": "6.行为型模式（关于分工的故事）",
                        "blocks": [
                            {
                                "key": "Chain of Responsibility",
                                "description": "每个对象可以处理自己职责范围内的问题，将这一系列对象递进的连接起来，前面一个处理不了，就交个后面一个（有点像单位里的踢皮球O(∩_∩)O~）"
                            },
                            {
                                "key": "Command",
                                "description": "将职责封装成具体的类，执行者是变量（铁打的营盘，流水的兵）"
                            },
                            {
                                "key": "Interpreter",
                                "description": "这类问题我足够专业，给你一些基本语法，你把它描述好，我负责解释"
                            },
                            {
                                "key": "Iterator",
                                "description": "集合对象负责提供迭代器：依次取出所有的集合元素"
                            },
                            {
                                "key": "Mediator",
                                "description": "将调用关系聚合：多个对象需要沟通，将路由关系整合起来，由一个类负责牵线搭桥"
                            },
                            {
                                "key": "Memento",
                                "description": "将备份行为拆分：我把关键信息交给别人备份，它提供存储服务（用于还原）"
                            },
                            {
                                "key": "Observer",
                                "description": "聚合调用：行为之间有依赖关系，将关系都保存到我这里（订阅），当我的行为发生时，同时调用触发行为（看上去像发出通知）"
                            },
                            {
                                "key": "State",
                                "description": "聚合判断：行为随状态改变，将这个判断关系聚合到类里面"
                            },
                            {
                                "key": "Strategy",
                                "description": "将行为拆分：算法由专门的类实现，我在使用时挑选"
                            },
                            {
                                "key": "Template Method",
                                "description": "将算法拆开：父类负责算法骨架，子类负责每个步骤的具体实现"
                            },
                            {
                                "key": "Visitor",
                                "description": "将行为拆分：留下扩展接口，接收Command对象"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "十一、信息安全",
                "sections": [
                    {
                        "name": "1.通信保密方法",
                        "blocks": [
                            {
                                "key": "目的",
                                "description": "确保信息的保密性、完整性、抗抵赖性、通信双方互信"
                            },
                            {
                                "key": "加密原理",
                                "description": "密文 = 算法（密钥, 密文）"
                            },
                            {
                                "key": "对称加密体制",
                                "description": "加密和解密共有一个密钥"
                            },
                            {
                                "key": "非对称加密体制",
                                "description": "加密和解密使用不同的密钥（1个公开，1个保密）"
                            },
                            {
                                "key": "私钥",
                                "description": "自己保留的密钥，用于解密和签名"
                            },
                            {
                                "key": "公钥",
                                "description": "交给别人的密钥，用于加密和验证签名"
                            },
                            {
                                "key": "数字签名",
                                "description": "发送者用私钥加密摘要（接收者用公钥解密摘要，然后对比摘要是否相同，以保证信息的完整性）"
                            },
                            {
                                "key": "数字证书",
                                "description": "CA给[公钥、公钥主人]签名（接收者从证书中取出公钥，以保证对公钥主人的信任）"
                            },
                            {
                                "key": "证书中心CA",
                                "description": "颁发数字证书的公信权威机构（保证大家对数字证书的信任）"
                            },
                            {
                                "key": "公钥基础设施PKI",
                                "description": "专门提供数字证书的管理和认证服务（第三方信息安全服务平台，为了简化信息安全相关的操作）"
                            }
                        ]
                    },
                    {
                        "name": "2.访问控制",
                        "blocks": [
                            {
                                "key": "身份认证（你是谁？）",
                                "description": "我知道什么（如：口令、问题）、我有什么（如：IC卡、指纹、u盾、主机地址）、可信的第三方（如：微博、腾讯等）"
                            },
                            {
                                "key": "授权（你可以做什么？）",
                                "description": "[对象、操作]排列组合：能够对 谁 做哪些操作？（参考数据库授权）"
                            }
                        ]
                    },
                    {
                        "name": "3.数据备份",
                        "blocks": [
                            {
                                "key": "定义",
                                "description": "防止有用信息丢失的最后一道防线"
                            },
                            {
                                "key": "备份类型",
                                "description": "完整备份、差异备份、增量备份、按需备份"
                            }
                        ]
                    },
                    {
                        "name": "4.安全管理",
                        "blocks": [
                            {
                                "key": "安全设备管理",
                                "description": "防火墙、vpn、防病毒软件等"
                            },
                            {
                                "key": "安全策略管理",
                                "description": "制定使用硬件、软件的安全方式"
                            },
                            {
                                "key": "安全分析",
                                "description": "分析安全风险，并设法消除"
                            },
                            {
                                "key": "安全审计",
                                "description": "记录安全相关的各种日志，做大数据分析、得出结论"
                            }
                        ]
                    },
                    {
                        "name": "5.网络安全体系架构",
                        "blocks": [
                            {
                                "key": "鉴别框架",
                                "description": "提供身份认证服务（申请鉴别->提交鉴别信息->验证鉴别信息->获得鉴别结果）"
                            },
                            {
                                "key": "访问控制框架",
                                "description": "提供授权服务（访问控制信息ACI【通常是用户身份】->访问控制判断->访问控制实施【特定提示信息，或导向到某个页面】）"
                            },
                            {
                                "key": "机密性框架",
                                "description": "提供加解密服务（隐藏数据语义）"
                            },
                            {
                                "key": "完整性框架",
                                "description": "探测数据是否被篡改的服务"
                            },
                            {
                                "key": "抗抵赖框架",
                                "description": "提供证据的生成、存储、验证服务"
                            }
                        ]
                    },
                    {
                        "name": "6.安全风险源",
                        "blocks": [
                            {
                                "key": "敌人",
                                "description": "主动攻击、被动监听"
                            },
                            {
                                "key": "环境",
                                "description": "水、火、地震、雷击、战争"
                            },
                            {
                                "key": "系统",
                                "description": "硬件故障、供电故障、软件故障、通信故障"
                            },
                            {
                                "key": "自己人",
                                "description": "编程错误、操作不当、无意泄密"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "十二、系统可靠性",
                "sections": [
                    {
                        "name": "1.简介",
                        "blocks": [
                            {
                                "key": "定义",
                                "description": "在规定的条件、时间下，完成功能的能力"
                            },
                            {
                                "key": "固有可靠性",
                                "description": "通过设计、制造赋予产品的可靠性"
                            },
                            {
                                "key": "使用可靠性",
                                "description": "受使用条件影响"
                            },
                            {
                                "key": "度量",
                                "description": "规定条件、时间下，不触碰到软件bug的概率"
                            }
                        ]
                    },
                    {
                        "name": "2.软硬件可靠性的不同点",
                        "blocks": [
                            {
                                "key": "复杂性",
                                "description": "软件的逻辑复杂度超过硬件"
                            },
                            {
                                "key": "物理退化",
                                "description": "软件不存在退化现象"
                            },
                            {
                                "key": "唯一性",
                                "description": "复制不能保证硬件相同，但软件绝对相同"
                            },
                            {
                                "key": "版本更新",
                                "description": "软件变化快"
                            }
                        ]
                    },
                    {
                        "name": "3.软件可靠性设计",
                        "blocks": [
                            {
                                "key": "容错设计",
                                "description": "用多种算法实现同一组可互相替换的组件"
                            },
                            {
                                "key": "检错技术",
                                "description": "捕获异常，处理"
                            },
                            {
                                "key": "降低复杂度",
                                "description": "简化结构，缩短代码长度"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "十三、架构师管理实践",
                "sections": [
                    {
                        "name": "1.第一节",
                        "blocks": [
                            {
                                "key": "键",
                                "description": "值"
                            },
                            {
                                "key": "键",
                                "description": "值"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "十四、知识产权与法律法规（判断是否侵权）",
                "sections": [
                    {
                        "name": "1.著作权法",
                        "blocks": [
                            {
                                "key": "客体",
                                "description": "创作实体（思想的表现形式）"
                            },
                            {
                                "key": "所有者",
                                "description": "著作权归创作者或受让者所有，若作品利用单位的物质条件创作，则归单位所有"
                            },
                            {
                                "key": "著作权人对作品享有5种权利",
                                "description": "署名权、修改权、保护作品完整权（永远保护）；发表权、使用许可权（保护到作者死亡后50年）"
                            }
                        ]
                    },
                    {
                        "name": "2.专利权法",
                        "blocks": [
                            {
                                "key": "客体",
                                "description": "发明创造（思想本身）"
                            },
                            {
                                "key": "所有者",
                                "description": "申请专利权归创作者或受让者所有，若发明创造利用了单位的物质条件，则由单位申请专利"
                            },
                            {
                                "key": "专利权保护时间",
                                "description": "从申请日算起，外观设计保护10年，发明专利保护20年"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "十五、案例分析技巧",
                "sections": [
                    {
                        "name": "1.案例分析考察点",
                        "blocks": [
                            {
                                "key": "知识面",
                                "description": "广博而坚实的知识和见解"
                            },
                            {
                                "key": "理解归纳能力",
                                "description": "看透问题"
                            },
                            {
                                "key": "分析能力",
                                "description": "定量估算、定性描述"
                            },
                            {
                                "key": "架构设计经验",
                                "description": "给出方案，解决问题"
                            },
                            {
                                "key": "甄别能力",
                                "description": "提取必要信息，舍弃干扰信息"
                            }
                        ]
                    },
                    {
                        "name": "2.题型分类解析",
                        "blocks": [
                            {
                                "key": "综合知识类（阅历）",
                                "description": "无技巧可言，全在平时积累；会者不难、难者不会，只能放弃不会的"
                            },
                            {
                                "key": "比较分析类（工作技能）",
                                "description": "不同的设计方案，通过比较分优劣，最后折中；架构师的基本技能：权衡"
                            },
                            {
                                "key": "学习应用类（学习能力）",
                                "description": "通过短时间学习，掌握新的理论和方法；通过类比，习得差异部分、巩固相同部分"
                            },
                            {
                                "key": "情景推断类（工作经验）",
                                "description": "业务情景结合实际经验，推测必不可少的功能和方法"
                            },
                            {
                                "key": "因果分析类（程序员的天赋）",
                                "description": "根据结果分析原因 或 根据现状分析可能会出现的问题；就是逻辑推理"
                            },
                            {
                                "key": "归纳抽象类（架构师的天赋）",
                                "description": "把问题抽象成数学模型，把抽象的理论实例化；就是找共性和举例子"
                            }
                        ]
                    },
                    {
                        "name": "3.策略",
                        "blocks": [
                            {
                                "key": "做例题",
                                "description": "书+真题"
                            },
                            {
                                "key": "多反思",
                                "description": "记忆问题内容，总结答题策略"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "十六、论文写作技巧",
                "sections": [
                    {
                        "name": "1.论文写作考察点（把经验和能力 表达出来）",
                        "blocks": [
                            {
                                "key": "架构设计经验",
                                "description": "多角度总结（技术、管理、经济），把零散的经验系统的汇聚起来"
                            },
                            {
                                "key": "独立工作能力",
                                "description": "遇到问题后，分析、解决的过程"
                            },
                            {
                                "key": "表达能力",
                                "description": "把思想有条理、有主次的表达出来，让人理解、共鸣"
                            }
                        ]
                    },
                    {
                        "name": "2.如何准备",
                        "blocks": [
                            {
                                "key": "总结",
                                "description": "整理项目经验，积累内容素材"
                            },
                            {
                                "key": "临摹",
                                "description": "阅读范文，借鉴写作思路、舶来素材"
                            },
                            {
                                "key": "练习",
                                "description": "培养写作思路，提高写作速度"
                            }
                        ]
                    },
                    {
                        "name": "3.写论文的步骤",
                        "blocks": [
                            {
                                "key": "选试题",
                                "description": "根据熟悉程度，做标记"
                            },
                            {
                                "key": "构思",
                                "description": "构思论点、论据（项目内容），划分章节"
                            },
                            {
                                "key": "写摘要",
                                "description": "包装一下论点，简单陈述"
                            },
                            {
                                "key": "写正文",
                                "description": "细化论点、论据"
                            },
                            {
                                "key": "检查",
                                "description": "无遗漏，卷面整洁、字迹工整"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "注释": [
        "1.操作系统的作用：管理硬件、调度软件、提供交互界面",
        "2.计算机网络：计算机作为节点，它们的通信关系就是网络",
        "3.数据压缩：信息需要存储和传播，体量大小是它的瓶颈",
        "4.架构设计是一种平衡设计，需要在功能需求和非功能需求上做出妥协选择",
        "5.视图：同一个事物，关注不同的属性集合，就能反映某一方面的问题",
        "6.模式：解决问题时，可复用的套路（是具体行为的抽象）",
        "7.无通用解决方案，必须根据实际情况权衡抉择！"
    ],
    "参考文献": [
    ]
}