{
    "题目": "大型网站技术架构",
    "摘要": "",
    "关键字": "",
    "正文": {
        "chapters": [
            {
                "name": "一、概述",
                "sections": [
                    {
                        "name": "1.核心思想",
                        "blocks": [
                            {
                                "key": "演化",
                                "description": "大型网站是由小网站逐渐演化而来（不是一蹴而就）"
                            },
                            {
                                "key": "模式",
                                "description": "场景与问题的重复出现，促成了可复用的解决方案"
                            },
                            {
                                "key": "驱动",
                                "description": "业务是技术的驱动力，不断增长的业务推动了网站技术的发展"
                            },
                            {
                                "key": "解决问题",
                                "description": "业务问题可以由技术手段和业务手段来解决（不要禁锢解决问题的方式）"
                            },
                            {
                                "key": "高手",
                                "description": "遇到了常人难以遇到的问题，并解决了（积累经验的机会多）"
                            }
                        ]
                    },
                    {
                        "name": "2.大型网站架构的发展历程",
                        "blocks": [
                            {
                                "key": "单服务器",
                                "description": "应用、文件、数据库集中在一台服务器上"
                            },
                            {
                                "key": "应用、数据分离",
                                "description": "应用服务器 + 文件服务器 + 数据库服务器"
                            },
                            {
                                "key": "分布式数据缓存",
                                "description": "80%的业务集中在20%的数据，将这部分数据缓存（数据提速）"
                            },
                            {
                                "key": "应用服务器集群",
                                "description": "通过负载均衡，提高可接收请求的上限（应用提速）"
                            },
                            {
                                "key": "数据库读写分离",
                                "description": "主从热备，主数据库负责写，从数据库负责读（数据提速）"
                            },
                            {
                                "key": "使用CDN和反向代理",
                                "description": "CDN缓存静态资源，反向代理缓存业务数据（数据提速）"
                            },
                            {
                                "key": "分布式数据库",
                                "description": "单表数据规模非常庞大时使用（数据提量提速）"
                            },
                            {
                                "key": "NoSql数据库",
                                "description": "天生就是用来解决大数据量和高性能问题的（数据提量提速）"
                            },
                            {
                                "key": "业务纵向拆分",
                                "description": "将大网站拆分为多个松耦合的小网站，通过超链接、消息队列、数据库通信（应用提速）"
                            },
                            {
                                "key": "分布式服务",
                                "description": "先横向拆分出服务层，再纵向拆分服务，分别发布在不同的服务器集群中（应用提速）"
                            }
                        ]
                    },
                    {
                        "name": "3.大型网站的特点",
                        "blocks": [
                            {
                                "key": "大数据",
                                "description": "用户多，因此产生的业务数据和用户数据多"
                            },
                            {
                                "key": "高并发、大流量",
                                "description": "用户多，因此单位时间请求量大"
                            },
                            {
                                "key": "必须高可用",
                                "description": "用户多，一旦宕机，波及范围广、损失大"
                            },
                            {
                                "key": "网络情况复杂",
                                "description": "用户多，且分属在不同的网络环境中"
                            },
                            {
                                "key": "安全环境恶劣",
                                "description": "树大招风，成为众多黑客攻击或炫耀的对象"
                            },
                            {
                                "key": "渐进式发展",
                                "description": "市场变化快，不可能一开始就捕获所有 功能性和非功能性 需求"
                            },
                            {
                                "key": "发布频繁",
                                "description": "为快速响应用户需求，频繁增量迭代"
                            }
                        ]
                    },
                    {
                        "name": "4.大型网站解决问题的思路",
                        "blocks": [
                            {
                                "key": "分层",
                                "description": "横向切分，定义层次边界和接口（合理的分配职责）"
                            },
                            {
                                "key": "分割",
                                "description": "纵向切分，根据“高内聚、低耦合”定义模块（使模块独立）"
                            },
                            {
                                "key": "分布式",
                                "description": "切分后的模块，部署在不同的服务器上（分工协作）"
                            },
                            {
                                "key": "集群",
                                "description": "多台服务器干同一件事情（人多力量大，并可相互替代）"
                            },
                            {
                                "key": "缓存",
                                "description": "将经常访问的数据，暂存到可以快速读取的地方（访问提速）"
                            },
                            {
                                "key": "异步",
                                "description": "将一个业务操作分成多个步骤，通过消息队列联系相邻的步骤（使步骤独立）"
                            },
                            {
                                "key": "冗余",
                                "description": "服务器和数据多做几个备份（增加后备力量，应付突发情况）"
                            },
                            {
                                "key": "自动化流程",
                                "description": "开发、维护过程中的固定步骤，用程序描述出来，交给计算机来做"
                            },
                            {
                                "key": "安全",
                                "description": "漏洞扫描 + 加密技术 + 信息过滤 + 风险控制"
                            }
                        ]
                    },
                    {
                        "name": "5.大型网站架构的核心要素",
                        "blocks": [
                            {
                                "key": "性能",
                                "description": "响应迅速"
                            },
                            {
                                "key": "伸缩性",
                                "description": "仅通过增加硬件，获得性能提升的能力"
                            },
                            {
                                "key": "可用性",
                                "description": "稳定，不宕机"
                            },
                            {
                                "key": "扩展性",
                                "description": "容易增加功能"
                            },
                            {
                                "key": "安全性",
                                "description": "抵御恶意攻击"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "注释": [
    ],
    "参考文献": [
    ]
}