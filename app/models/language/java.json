{
    "题目": "Java",
    "摘要": "介绍Java的语法基础、常用类库",
    "关键字": "Java入门, Java基础, JavaAPI",
    "正文": {
        "chapters": [
            {
                "name": "一、java简介",
                "sections": [
                    {
                        "name": "1.what（Java是什么，用来干啥？）",
                        "blocks": [
                            {
                                "key": "面向对象编程语言",
                                "description": "【适合】编写服务端应用程序，【偶尔】用于编写桌面应用程序"
                            },
                            {
                                "key": "web应用的组成",
                                "description": "界面交互(html/...) —— 业务逻辑(java/...) —— 数据存取(SqlServer/...)"
                            }
                        ]
                    },
                    {
                        "name": "2.why（为什么使用它？ 下列广告词）",
                        "blocks": [
                            {
                                "key": "简单",
                                "description": "java是高级语言（其它：汇编、机器语言），表达能力强 <br />从c++发展而来，大部分语法规则相同 <br />剔除了一些复杂的语法（指针【容易造成内存泄漏、内存溢出】、多重继承等） <br />增加了一些功能（自动垃圾回收：创建对象时，自动分配内存；使用完毕，自动释放内存）"
                            },
                            {
                                "key": "面向对象",
                                "description": "Object（事物） Oriented（看待） <br />如何解决问题，取决于如何看待问题，面向对象与普通人看待世界的方式一致 <br />封装（隐藏细节）、继承（复用）、多态（同一个行为，在不同事物身上表现不同）"
                            },
                            {
                                "key": "平台独立",
                                "description": "编译后的类文件是跨平台的，可以在任何安装了jvm的计算机上运行"
                            },
                            {
                                "key": "可移植",
                                "description": "源码无需更改，java虚拟机掩盖了不同机器的差别"
                            },
                            {
                                "key": "分布式",
                                "description": "通过网络编程，将应用程序分布在多台计算机上（QQ、微信）"
                            },
                            {
                                "key": "安全",
                                "description": "Java 安全模型基于一个可定制的“沙盒”，程序可在其中安全运行，对系统或用户无潜在风险"
                            },
                            {
                                "key": "健壮",
                                "description": "程序不会轻易崩溃。通过异常处理（预案），可以快速恢复正常流程"
                            },
                            {
                                "key": "多线程",
                                "description": "同时执行多个任务"
                            }
                        ]
                    },
                    {
                        "name": "3.how（怎样学习Java？）",
                        "blocks": [
                            {
                                "key": "理解",
                                "description": "基础概念（如：面向对象、类、接口、继承、异常）"
                            },
                            {
                                "key": "掌握",
                                "description": "基本语法（如：定义类、接口、枚举，对类成员做访问限制，流程控制）"
                            },
                            {
                                "key": "学会",
                                "description": "基本套路（如：安装java环境、编译、运行、调试）"
                            },
                            {
                                "key": "熟悉",
                                "description": "api和类库（如：流、集合、jdbc）"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "二、基础概念",
                "sections": [
                    {
                        "name": "1.java的体系结构",
                        "blocks": [
                            {
                                "key": "源文件",
                                "description": "程序员写的代码，保存为Xxx.java"
                            },
                            {
                                "key": "类文件",
                                "description": "javac编译源文件，生成Xxx.class"
                            },
                            {
                                "key": "JVM(java虚拟机)",
                                "description": "类加载器：【动态加载】所需的类文件 <br />字节码校验器：【检查】类文件的内容，确保字节码安全执行 <br />执行引擎：【解释】类文件中的字节码 <br />JIT编译：【编译】类文件中的字节码 -> 机器码（执行速度更快）"
                            },
                            {
                                "key": "API/类库",
                                "description": "JRE中自带的java类文件（类似c语言的函数库）"
                            }
                        ]
                    },
                    {
                        "name": "2.java的开发工具包（JDK）",
                        "blocks": [
                            {
                                "key": "",
                                "description": "（查看jdk目录的bin文件夹）"
                            },
                            {
                                "key": "<code>javac</code>",
                                "description": "编译（解决中文乱码：-encoding utf-8）"
                            },
                            {
                                "key": "<code>java</code>",
                                "description": "运行（在package所在的目录，使用java命令时带上包名）"
                            },
                            {
                                "key": "<code>jar</code>",
                                "description": "打包（相当于zip，可以压缩jar/war包）"
                            },
                            {
                                "key": "<code>javadoc</code>",
                                "description": "根据代码注释生成文档"
                            },
                            {
                                "key": "<code>...</code>",
                                "description": ""
                            },
                            {
                                "key": "",
                                "description": "①JDK自带 JRE(java运行环境) = JVM + API"
                            },
                            {
                                "key": "",
                                "description": "②生产环境不需要JDK，只需单独安装JRE"
                            }
                        ]
                    },
                    {
                        "name": "3.java程序的构建块",
                        "blocks": [
                            {
                                "key": "",
                                "description": "1）宏观"
                            },
                            {
                                "key": "包",
                                "description": "类/接口 太多，归置一下"
                            },
                            {
                                "key": "类",
                                "description": "描述事物"
                            },
                            {
                                "key": "",
                                "description": "属性（用数据，描述特征）"
                            },
                            {
                                "key": "",
                                "description": "方法（用算法，描述行为）"
                            },
                            {
                                "key": "接口",
                                "description": "定义能力"
                            },
                            {
                                "key": "",
                                "description": "方法（仅声明，不实现）"
                            },
                            {
                                "key": "",
                                "description": "2）微观"
                            },
                            {
                                "key": "数据",
                                "description": "数据类型 变量 = 值/对象;"
                            },
                            {
                                "key": "算法",
                                "description": "一系列处理数据的步骤"
                            }
                        ]
                    },
                    {
                        "name": "4.数据类型",
                        "blocks": [
                            {
                                "key": "原生数据类型",
                                "description": "告诉计算机，要开辟的多大内存空间，可进行哪类运算（值类型，不在类的体系中）"
                            },
                            {
                                "key": "自定义的类",
                                "description": "告诉程序员，事物的特征和行为（面向对象程序中，一切都基于类型）"
                            },
                            {
                                "key": "包装类",
                                "description": "Java作者特意定义了一些类，专门描述原生数据类型 <br />（得到2个好处：①将原生数据纳入到类的体系中 ②原生数据使用起来更方便）"
                            }
                        ]
                    },
                    {
                        "name": "5.值",
                        "blocks": [
                            {
                                "key": "字面值",
                                "description": "原生数据类型对应的值（计算机认识的基础数据）"
                            },
                            {
                                "key": "对象",
                                "description": "类对应的值（创建对象要调用构造函数）"
                            }
                        ]
                    },
                    {
                        "name": "6.访问限制",
                        "blocks": [
                            {
                                "key": "",
                                "description": "1）访问说明符（限制访问范围：能不能用？）"
                            },
                            {
                                "key": "<code>public</code>",
                                "description": "（类/成员）完全公开"
                            },
                            {
                                "key": "<code>protected</code>",
                                "description": "（成员）留给自己和子类"
                            },
                            {
                                "key": "<code>private</code>",
                                "description": "（成员）只留给自己"
                            },
                            {
                                "key": "<code>[默认]</code>",
                                "description": "（类/成员）同一个包内公开"
                            },
                            {
                                "key": "",
                                "description": "2）访问修饰符（限制如何使用：怎么用？）"
                            },
                            {
                                "key": "<code>final</code>",
                                "description": "（变量/方法/类）最终，不能修改"
                            },
                            {
                                "key": "<code>static</code>",
                                "description": "（属性/方法/内部类）静态，一直都在、不需要实例化就能访问"
                            },
                            {
                                "key": "<code>abstract</code>",
                                "description": "（方法/类）抽象，因为不真实、不能实例化"
                            },
                            {
                                "key": "<code>transient</code>",
                                "description": "（属性）短暂，因为不长久、无需序列化"
                            },
                            {
                                "key": "<code>synchronized</code>",
                                "description": "（变量/方法）同步，排队、强迫多个线程依次访问"
                            },
                            {
                                "key": "<code>volatile</code>",
                                "description": "（变量）易变，状态不稳定、需要实时取值"
                            },
                            {
                                "key": "<code>strictfp</code>",
                                "description": "（方法/类）严格，精确的计算小数"
                            },
                            {
                                "key": "<code>native</code>",
                                "description": "（方法）当地，不是我实现的、由其它语言编写"
                            }
                        ]
                    },
                    {
                        "name": "7.面向对象的三大特征",
                        "blocks": [
                            {
                                "key": "",
                                "description": "1）封装"
                            },
                            {
                                "key": "",
                                "description": "隐藏实现细节（数据和算法都在类的内部）"
                            },
                            {
                                "key": "",
                                "description": "2）继承"
                            },
                            {
                                "key": "<code>extends</code>",
                                "description": "扩展基类的属性和方法"
                            },
                            {
                                "key": "<code>implements</code>",
                                "description": "实现接口中定义的方法"
                            },
                            {
                                "key": "",
                                "description": "3）多态"
                            },
                            {
                                "key": "",
                                "description": "同一个行为（方法名），具有多种不同的表现形态（实际上是不同的代码块）"
                            },
                            {
                                "key": "静态多态性",
                                "description": "方法重载（同名，参数不同，在同一类中）"
                            },
                            {
                                "key": "动态多态性",
                                "description": "方法重写（同名，参数相同，在不同类中）"
                            }
                        ]
                    },
                    {
                        "name": "8.异常处理",
                        "blocks": [
                            {
                                "key": "",
                                "description": "程序执行期间，发生的执行流中断的情况（就是程序运行不下去了）"
                            },
                            {
                                "key": "错误",
                                "description": "严重，程序无法解决"
                            },
                            {
                                "key": "异常",
                                "description": "轻微，可以恢复正常"
                            },
                            {
                                "key": "",
                                "description": "（编写异常处理代码的思维过程）"
                            },
                            {
                                "key": "1）预判异常",
                                "description": "感觉这段代码，会出哪类问题"
                            },
                            {
                                "key": "2）定义异常",
                                "description": "描述这个问题（通常已经在类库中了/没有的话就继承并定义一个）"
                            },
                            {
                                "key": "3）处理异常",
                                "description": "能够处理：捕获（很多时候是记日志：暂时忽略，由运维人员定期查看分析原因） <br />处理不了：抛出"
                            }
                        ]
                    },
                    {
                        "name": "9.断言",
                        "blocks": [
                            {
                                "key": "测试的本质",
                                "description": "现实 ?= 期望"
                            },
                            {
                                "key": "断言的本质",
                                "description": "这个表达式，在java中的语法"
                            }
                        ]
                    },
                    {
                        "name": "10.类型转换",
                        "blocks": [
                            {
                                "key": "",
                                "description": "1）原生数据类型（值）"
                            },
                            {
                                "key": "",
                                "description": "（本质：内存空间大小的切换）"
                            },
                            {
                                "key": "隐式转换",
                                "description": "自动转换（小空间 【无损】切换到 大空间）"
                            },
                            {
                                "key": "显式转换",
                                "description": "强制转换（大空间 【有损】截断到 小空间）"
                            },
                            {
                                "key": "",
                                "description": "2）复合数据类型（引用）"
                            },
                            {
                                "key": "",
                                "description": "（本质：粗略还是精确）"
                            },
                            {
                                "key": "向上转型",
                                "description": "父类可以引用子类对象（因为：子类是对父类的细分）"
                            },
                            {
                                "key": "向下转型",
                                "description": "子类对象被父类引用后，还可以强制转换回本身的类型"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "三、基本语法",
                "sections": [
                    {
                        "name": "1.定义程序的构建块",
                        "codeSnippets": [
                            {
                                "description": "1）定义类",
                                "url": "/codeSnippets/java/defineClass.java"
                            },
                            {
                                "description": "2）定义接口",
                                "url": "/codeSnippets/java/defineInterface.java"
                            },
                            {
                                "description": "3）定义成员变量",
                                "url": "/codeSnippets/java/defineData.java"
                            },
                            {
                                "description": "4）定义成员方法",
                                "url": "/codeSnippets/java/defineMethod.java"
                            },
                            {
                                "description": "5）定义构造函数",
                                "url": "/codeSnippets/java/defineConstructor.java"
                            }
                        ]
                    },
                    {
                        "name": "2.基本数据类型",
                        "blocks": [
                            {
                                "key": "",
                                "description": "1）原生数据类型"
                            },
                            {
                                "key": "整数",
                                "description": "<code>byte</code>(8bit), <code>short</code>(2byte), <code>int</code>(4byte) ,<code>long</code>(8byte)"
                            },
                            {
                                "key": "小数",
                                "description": "<code>float</code>(4byte), <code>double</code>(8byte)"
                            },
                            {
                                "key": "字符",
                                "description": "<code>char</code>(1byte，字符和数字可以相互转换，规则是ASCII码)"
                            },
                            {
                                "key": "布尔",
                                "description": "<code>boolean</code>"
                            },
                            {
                                "key": "",
                                "description": "2）包装类"
                            },
                            {
                                "key": "整数",
                                "description": "<code>Byte</code>, <code>Short</code>, <code>Integer</code> ,<code>Long</code>"
                            },
                            {
                                "key": "小数",
                                "description": "<code>Float</code>, <code>Double</code>"
                            },
                            {
                                "key": "字符",
                                "description": "<code>Character</code>"
                            },
                            {
                                "key": "布尔",
                                "description": "<code>Boolean</code>"
                            },
                            {
                                "key": "",
                                "description": "3）字面值"
                            },
                            {
                                "key": "二进制（前缀）",
                                "description": "<code>0b</code>"
                            },
                            {
                                "key": "八进制（前缀）",
                                "description": "<code>0</code>"
                            },
                            {
                                "key": "十六进制（前缀）",
                                "description": "<code>0x</code>"
                            },
                            {
                                "key": "long型（后缀）",
                                "description": "<code>L</code>"
                            },
                            {
                                "key": "float型（后缀）",
                                "description": "<code>f</code>"
                            },
                            {
                                "key": "double型（后缀）",
                                "description": "<code>d</code>（可以省略，十进制数字默认是double型）"
                            },
                            {
                                "key": "char型",
                                "description": "<code>''</code>"
                            },
                            {
                                "key": "boolean型",
                                "description": "<code>true/false</code>"
                            }
                        ]
                    },
                    {
                        "name": "3.运算符",
                        "blocks": [
                            {
                                "key": "位运算符",
                                "description": "<code>&</code> <code>|</code> <code>~</code> <code>^</code> <code><<</code> <code>>></code>"
                            },
                            {
                                "key": "算数运算符",
                                "description": "<code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>%</code> <code>++</code> <code>--</code>"
                            },
                            {
                                "key": "比较运算符",
                                "description": "<code>==</code> <code>!=</code> <code>></code> <code>>=</code> <code><</code> <code><=</code>"
                            },
                            {
                                "key": "逻辑运算符",
                                "description": "<code>&&</code> <code>||</code> <code>!</code>"
                            },
                            {
                                "key": "赋值运算符",
                                "description": "<code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code>"
                            },
                            {
                                "key": "三元运算符",
                                "description": "<code>布尔 ? 选项1 ：选项2</code>"
                            },
                            {
                                "key": "运算符优先级",
                                "description": "括号 > 一元运算符 > 算数运算符 > 比较运算符 > 逻辑运算符 > 赋值运算符"
                            }
                        ]
                    },
                    {
                        "name": "4.流程控制语句",
                        "codeSnippets": [
                            {
                                "description": "1）分支",
                                "url": "/codeSnippets/java/branchControl.java"
                            },
                            {
                                "description": "2）循环",
                                "url": "/codeSnippets/java/loopControl.java"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "四、基本套路",
                "sections": [
                    {
                        "name": "1.安装jdk",
                        "blocks": [
                            {
                                "key": "",
                                "description": "①下载并解压"
                            },
                            {
                                "key": "下载地址",
                                "description": "https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"
                            },
                            {
                                "key": "",
                                "description": "②配置环境变量"
                            },
                            {
                                "key": "JAVA_HOME",
                                "description": "{jdk的目录}"
                            },
                            {
                                "key": "PATH",
                                "description": "<code>%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</code>"
                            },
                            {
                                "key": "CLASS_PATH",
                                "description": "<code>.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</code>"
                            },
                            {
                                "key": "",
                                "description": "<code>PATH</code>是把值追加到变量最前面，<code>JAVA_HOME</code>和<code>CLASS_PATH</code>是替换"
                            },
                            {
                                "key": "",
                                "description": "③验证环境"
                            },
                            {
                                "key": "命令行",
                                "description": "<code>java -version</code>"
                            }
                        ]
                    },
                    {
                        "name": "2.编译",
                        "blocks": [
                            {
                                "key": "命令行",
                                "description": "①进入{项目根目录}"
                            },
                            {
                                "key": "",
                                "description": "②<code>javac</code> {包名}\\{类名}.java <code>-d</code> {目标文件夹（若省略，默认在同一目录）}"
                            },
                            {
                                "key": "",
                                "description": "在{目标文件夹}，生成同名的类文件{包名}.{类名}"
                            }
                        ]
                    },
                    {
                        "name": "3.运行",
                        "blocks": [
                            {
                                "key": "命令行",
                                "description": "①进入{目标文件夹}"
                            },
                            {
                                "key": "",
                                "description": "②<code>java</code> {包名}.{类名}"
                            },
                            {
                                "key": "",
                                "description": "JVM加载类文件并运行"
                            }
                        ]
                    },
                    {
                        "name": "4.打包",
                        "blocks": [
                            {
                                "key": "",
                                "description": "1）压缩"
                            },
                            {
                                "key": "命令行",
                                "description": "①进入 {要压缩的目录} 的上一级"
                            },
                            {
                                "key": "",
                                "description": "②<code>jar -cvf</code> {压缩文件名}.jar {要压缩的目录}"
                            },
                            {
                                "key": "",
                                "description": "2）解压"
                            },
                            {
                                "key": "",
                                "description": "①将 {压缩文件名}.jar 复制到 {解压目录}"
                            },
                            {
                                "key": "命令行",
                                "description": "①进入 {解压目录}"
                            },
                            {
                                "key": "",
                                "description": "②<code>jar -xvf</code> {压缩文件名}.jar"
                            }
                        ]
                    },
                    {
                        "name": "5.eclipse安装配置",
                        "blocks": [
                            {
                                "key": "",
                                "description": "①下载并解压，在桌面创建快捷方式"
                            },
                            {
                                "key": "下载地址",
                                "description": "http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/oxygen/R/eclipse-java-oxygen-R-win32-x86_64.zip"
                            },
                            {
                                "key": "",
                                "description": "②配置"
                            },
                            {
                                "key": "工作目录",
                                "description": "File\\Switch WorkSpace"
                            },
                            {
                                "key": "选择jdk目录",
                                "description": "Preference\\Java\\Installed JREs"
                            },
                            {
                                "key": "选择编码格式 UTF-8",
                                "description": "Preference\\General\\WorkSpace\\Text file encoding"
                            },
                            {
                                "key": "",
                                "description": "③快捷键"
                            },
                            {
                                "key": "智能提示",
                                "description": "<code>Alt</code> + <code>/</code>"
                            },
                            {
                                "key": "注释",
                                "description": "<code>/*</code> + <code>回车</code>"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "五、API和类库",
                "sections": [
                    {
                        "name": "1.简介",
                        "blocks": [
                            {
                                "key": "作用",
                                "description": "管理依赖，构建项目。（相当于 npm + gulp）"
                            },
                            {
                                "key": "项目构建过程",
                                "description": "清理、编译、测试、打包、集成测试、验证、部署"
                            },
                            {
                                "key": "构件识别",
                                "description": "<code>groupId</code> 公司网址的反写.项目名 <br /><code>artifactId</code> 项目名-模块名 <br /><code>version</code> 版本号"
                            },
                            {
                                "key": "仓库",
                                "description": "存放构件，分为本地仓库和远程仓库（与nodejs相似）"
                            },
                            {
                                "key": "ClassPath",
                                "description": "相当于.net中的第三方类库引用"
                            },
                            {
                                "key": "Dependency Scope",
                                "description": "compile: 编译、测试、运行 <br/>provided: 编译、测试 <br/>runtime: 测试、运行 <br/>test: 测试 <br/>compile: 编译、测试"
                            },
                            {
                                "key": "重要的pom.xml",
                                "description": "在项目根目录，描述构建信息（相当于 package.json）"
                            }
                        ]
                    }                  
                ]
            }
        ]
    },
    "注释": [
        "",
        ""
    ],
    "参考文献": []
}