{
    "题目": "持续集成",
    "摘要": "软件开发过程需要分工协作，各自完成后将工作成果集成，本文介绍如何将集成过程自动化",
    "关键字": "持续集成",
    "正文": {
        "chapters": [
            {
                "name": "",
                "sections": [
                    {
                        "name": "1.目标",
                        "blocks": [
                            {
                                "key": "问题",
                                "description": "降低项目集成的风险"
                            },
                            {
                                "key": "办法",
                                "description": "早发现，早处理！"
                            },
                            {
                                "key": "思想",
                                "description": "一点一点改变，循序渐进"
                            }
                        ]
                    },
                    {
                        "name": "2.背景：软件开发过程中的两大难题",
                        "blocks": [
                            {
                                "key": "目标风险",
                                "description": "确定软件需求，即确定目标"
                            },
                            {
                                "key": "进度风险",
                                "description": "确定当前离目标有多远，即剩余工作量"
                            }
                        ]
                    },
                    {
                        "name": "3.持续集成可用来解决第二个难题",
                        "blocks": [
                            {
                                "key": "质量无法保证",
                                "description": "因为没有集成，只能保证组件的质量，无法保证总体的质量"
                            },
                            {
                                "key": "主观判断不准",
                                "description": "因为没有集成，忽略了集成的工作量（发现bug并修复）"
                            },
                            {
                                "key": "方法",
                                "description": "将集成的工作量分摊到平时，做一步，集成一步，步步为营！"
                            },
                            {
                                "key": "好处1",
                                "description": "保证开发过程中软件的整体质量"
                            },
                            {
                                "key": "好处2",
                                "description": "集成工作分摊到平时后，可降低判断误差"
                            },
                            {
                                "key": "好处3",
                                "description": "如果使用工具自动化集成中的重复过程，可以减少工作量"
                            }
                        ]
                    },
                    {
                        "name": "4.使用工具完成集成构建 CI",
                        "blocks": [
                            {
                                "key": "",
                                "description": "①触发集成"
                            },
                            {
                                "key": "",
                                "description": "手动 || 自动（根据时间配置）"
                            },
                            {
                                "key": "",
                                "description": "②CI服务器获取代码副本，执行构建脚本完成集成"
                            },
                            {
                                "key": "源代码编译",
                                "description": "生成可执行文件"
                            },
                            {
                                "key": "数据库集成",
                                "description": "运行Sql脚本"
                            },
                            {
                                "key": "测试",
                                "description": "运行自动化测试脚本"
                            },
                            {
                                "key": "审查",
                                "description": "运行代码审查工具"
                            },
                            {
                                "key": "部署",
                                "description": "打包软件，安装到相应环境"
                            },
                            {
                                "key": "",
                                "description": "③ CI服务器反馈构建结果"
                            }
                        ]
                    },
                    {
                        "name": "5.开发过程中的7项最佳实践",
                        "blocks": [
                            {
                                "key": "经常提交代码",
                                "description": "尽早发现集成问题"
                            },
                            {
                                "key": "不要提交无法构建的代码",
                                "description": "保证自己的代码质量"
                            },
                            {
                                "key": "立即修复无法集成的构建",
                                "description": "保证大家的开发基础"
                            },
                            {
                                "key": "编写自动化测试",
                                "description": "一次编写，重复使用"
                            },
                            {
                                "key": "必须通过所有测试和审查",
                                "description": "严格把好质量关"
                            },
                            {
                                "key": "执行私有构建",
                                "description": "降低集成构建失败的概率"
                            },
                            {
                                "key": "避免迁出无法构建的代码",
                                "description": "不能在这个基础上工作，是无效的操作"
                            }
                        ]
                    },
                    {
                        "name": "6.权衡自动化构建中要包含的过程",
                        "blocks": [
                            {
                                "key": "",
                                "description": "加入的过程越少，质量标准就越低"
                            },
                            {
                                "key": "",
                                "description": "加入的过程越多，反馈速度就越慢"
                            },
                            {
                                "key": "",
                                "description": "可以根据项目的里程碑，在不同阶段关注不同的过程（灵活增减）"
                            }
                        ]
                    },
                    {
                        "name": "7.推荐工具",
                        "blocks": [
                            {
                                "key": "CruiseControl.NET",
                                "description": "http://www.cruisecontrolnet.org"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "注释": [
        "1.基本原则与具体语言无关",
        "2.是提高程序可维护性的一种手段"
    ],
    "参考文献": []
}